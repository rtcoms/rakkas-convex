// src/whatwg-node.ts
import * as whatwgNodeFetch from "@whatwg-node/fetch";
import { Readable } from "node:stream";
import { Buffer } from "node:buffer";
function install() {
  function define(name, force = false, value = whatwgNodeFetch[name]) {
    if (force || !globalThis[name]) {
      Object.defineProperty(globalThis, name, {
        value,
        configurable: true
      });
    }
  }
  define("ReadableStream");
  define("WritableStream");
  define("TransformStream");
  define("AbortController");
  define("Blob");
  define("File");
  define("FormData");
  define("Headers");
  class Response2 extends whatwgNodeFetch.Response {
    constructor(input, init) {
      if (input instanceof ReadableStream) {
        input = Readable.from(input);
      } else if (input instanceof Uint8Array) {
        input = Buffer.from(input);
      }
      super(input, init);
      this.__input = input;
    }
  }
  define("Response", false, Response2);
  define("Request");
  define("fetch");
}
export {
  install as default
};

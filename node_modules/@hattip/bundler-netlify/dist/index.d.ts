import { BuildOptions } from 'esbuild';

interface NetlifyBundlerOptions {
    /**
     * Output directory
     * @default "netlify"
     */
    outputDir?: string;
    /**
     * Whether to clear the output directory if it exists.
     * @default true
     */
    clearOutputDir?: boolean;
    /**
     * Static files directory to copy to the output.
     * @default undefined
     */
    staticDir?: string;
    /**
     * Edge function entry file.
     * @default undefined
     */
    edgeEntry?: string;
    /**
     * Regular function entry file.
     * @default undefined
     */
    functionEntry?: string;
    /**
     * Callback for manipulating ESBuild options.
     */
    manipulateEsbuildOptions?: EsbuildOptionsFunction;
}
type EsbuildOptionsFunction = (options: BuildOptions, phase: "edge" | "regular") => void | Promise<void>;
declare function bundle(options?: NetlifyBundlerOptions): Promise<void>;
declare function bundleEdgeFunction(entry: string, outputDir: string, manipulateEsbuildOptions?: EsbuildOptionsFunction): Promise<void>;
declare function bundleRegularFunction(entry: string, outputDir: string, manipulateEsbuildOptions?: EsbuildOptionsFunction): Promise<void>;

export { type NetlifyBundlerOptions, bundle, bundleEdgeFunction, bundleRegularFunction };

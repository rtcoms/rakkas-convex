interface WalkOptions {
    /**
     * Whether to calculate the etag for each file.
     * @default true
     */
    etag?: boolean;
    /**
     * A list of file and directory names to ignore.
     * @default ["node_modules","dist",/^\.(?!well-known$)/]
     */
    prune?: (string | RegExp)[];
    /**
     * A function to get the mime type of a file.
     * @default import("mime-types").lookup
     */
    getType?: (name: string) => string | false;
}
interface FileInfo {
    readonly path: string;
    readonly type: string;
    readonly size: number;
    readonly etag?: string;
}
declare function walk(dir: string | URL, options?: WalkOptions): Map<string, FileInfo>;
declare function createFileSet(dir: string, options?: WalkOptions): Set<string>;
declare function createFileSetModule(dir: string, options?: WalkOptions): string;
declare function createFileMap(dir: string, options?: WalkOptions): Map<string, string | undefined>;
declare function createFileMapModule(dir: string, options?: WalkOptions): string;
declare function createFileList(dir: string, options?: WalkOptions): Array<[
    name: string,
    path: string | undefined,
    type: string,
    size: number,
    etag?: string
]>;
declare function createFileListModule(dir: string, options?: WalkOptions): string;
declare function createCompressedFileListModule(dir: string, options?: WalkOptions): string;

export { type FileInfo, type WalkOptions, createCompressedFileListModule, createFileList, createFileListModule, createFileMap, createFileMapModule, createFileSet, createFileSetModule, walk };

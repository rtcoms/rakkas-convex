{
  "version": 3,
  "sources": ["../../../../src/cli/lib/deploy2.ts"],
  "sourcesContent": ["import { changeSpinner, Context, logFailure } from \"../../bundler/context.js\";\nimport { deploymentFetch, logAndHandleFetchError } from \"./utils/utils.js\";\nimport {\n  StartPushRequest,\n  startPushResponse,\n  StartPushResponse,\n} from \"./deployApi/startPush.js\";\nimport {\n  AppDefinitionConfig,\n  ComponentDefinitionConfig,\n} from \"./deployApi/definitionConfig.js\";\n\n/** Push configuration2 to the given remote origin. */\nexport async function startPush(\n  ctx: Context,\n  url: string,\n  request: StartPushRequest,\n  verbose?: boolean,\n): Promise<StartPushResponse> {\n  if (verbose) {\n    const custom = (_k: string | number, s: any) =>\n      typeof s === \"string\" ? s.slice(0, 40) + (s.length > 40 ? \"...\" : \"\") : s;\n    console.log(JSON.stringify(request, custom, 2));\n  }\n  const onError = (err: any) => {\n    if (err.toString() === \"TypeError: fetch failed\") {\n      changeSpinner(ctx, `Fetch failed, is ${url} correct? Retrying...`);\n    }\n  };\n  const fetch = deploymentFetch(url, request.adminKey, onError);\n  changeSpinner(ctx, \"Analyzing and deploying source code...\");\n  try {\n    const response = await fetch(\"/api/deploy2/start_push\", {\n      body: JSON.stringify(request),\n      method: \"POST\",\n    });\n    return startPushResponse.parse(await response.json());\n  } catch (error: unknown) {\n    // TODO incorporate AuthConfigMissingEnvironmentVariable logic\n    logFailure(ctx, \"Error: Unable to start push to \" + url);\n    return await logAndHandleFetchError(ctx, error);\n  }\n}\n\nexport async function waitForSchema(\n  ctx: Context,\n  adminKey: string,\n  url: string,\n  startPush: StartPushResponse,\n) {\n  const fetch = deploymentFetch(url, adminKey);\n  try {\n    const response = await fetch(\"/api/deploy2/wait_for_schema\", {\n      body: JSON.stringify({\n        adminKey,\n        schemaChange: (startPush as any).schemaChange,\n        dryRun: false,\n      }),\n      method: \"POST\",\n    });\n    return await response.json();\n  } catch (error: unknown) {\n    // TODO incorporate AuthConfigMissingEnvironmentVariable logic\n    logFailure(ctx, \"Error: Unable to wait for schema from \" + url);\n    return await logAndHandleFetchError(ctx, error);\n  }\n}\n\nexport async function finishPush(\n  ctx: Context,\n  adminKey: string,\n  url: string,\n  startPush: StartPushResponse,\n): Promise<void> {\n  const fetch = deploymentFetch(url, adminKey);\n  changeSpinner(ctx, \"Finalizing push...\");\n  try {\n    const response = await fetch(\"/api/deploy2/finish_push\", {\n      body: JSON.stringify({\n        adminKey,\n        startPush,\n        dryRun: false,\n      }),\n      method: \"POST\",\n    });\n    return await response.json();\n  } catch (error: unknown) {\n    // TODO incorporate AuthConfigMissingEnvironmentVariable logic\n    logFailure(ctx, \"Error: Unable to finish push to \" + url);\n    return await logAndHandleFetchError(ctx, error);\n  }\n}\n\nexport type ComponentDefinitionConfigWithoutImpls = Omit<\n  ComponentDefinitionConfig,\n  \"schema\" | \"functions\"\n>;\nexport type AppDefinitionConfigWithoutImpls = Omit<\n  AppDefinitionConfig,\n  \"schema\" | \"functions\" | \"auth\"\n>;\n"],
  "mappings": ";AAAA,SAAS,eAAwB,kBAAkB;AACnD,SAAS,iBAAiB,8BAA8B;AACxD;AAAA,EAEE;AAAA,OAEK;AAOP,sBAAsB,UACpB,KACA,KACA,SACA,SAC4B;AAC5B,MAAI,SAAS;AACX,UAAM,SAAS,CAAC,IAAqB,MACnC,OAAO,MAAM,WAAW,EAAE,MAAM,GAAG,EAAE,KAAK,EAAE,SAAS,KAAK,QAAQ,MAAM;AAC1E,YAAQ,IAAI,KAAK,UAAU,SAAS,QAAQ,CAAC,CAAC;AAAA,EAChD;AACA,QAAM,UAAU,CAAC,QAAa;AAC5B,QAAI,IAAI,SAAS,MAAM,2BAA2B;AAChD,oBAAc,KAAK,oBAAoB,0BAA0B;AAAA,IACnE;AAAA,EACF;AACA,QAAM,QAAQ,gBAAgB,KAAK,QAAQ,UAAU,OAAO;AAC5D,gBAAc,KAAK,wCAAwC;AAC3D,MAAI;AACF,UAAM,WAAW,MAAM,MAAM,2BAA2B;AAAA,MACtD,MAAM,KAAK,UAAU,OAAO;AAAA,MAC5B,QAAQ;AAAA,IACV,CAAC;AACD,WAAO,kBAAkB,MAAM,MAAM,SAAS,KAAK,CAAC;AAAA,EACtD,SAAS,OAAP;AAEA,eAAW,KAAK,oCAAoC,GAAG;AACvD,WAAO,MAAM,uBAAuB,KAAK,KAAK;AAAA,EAChD;AACF;AAEA,sBAAsB,cACpB,KACA,UACA,KACAA,YACA;AACA,QAAM,QAAQ,gBAAgB,KAAK,QAAQ;AAC3C,MAAI;AACF,UAAM,WAAW,MAAM,MAAM,gCAAgC;AAAA,MAC3D,MAAM,KAAK,UAAU;AAAA,QACnB;AAAA,QACA,cAAeA,WAAkB;AAAA,QACjC,QAAQ;AAAA,MACV,CAAC;AAAA,MACD,QAAQ;AAAA,IACV,CAAC;AACD,WAAO,MAAM,SAAS,KAAK;AAAA,EAC7B,SAAS,OAAP;AAEA,eAAW,KAAK,2CAA2C,GAAG;AAC9D,WAAO,MAAM,uBAAuB,KAAK,KAAK;AAAA,EAChD;AACF;AAEA,sBAAsB,WACpB,KACA,UACA,KACAA,YACe;AACf,QAAM,QAAQ,gBAAgB,KAAK,QAAQ;AAC3C,gBAAc,KAAK,oBAAoB;AACvC,MAAI;AACF,UAAM,WAAW,MAAM,MAAM,4BAA4B;AAAA,MACvD,MAAM,KAAK,UAAU;AAAA,QACnB;AAAA,QACA,WAAAA;AAAA,QACA,QAAQ;AAAA,MACV,CAAC;AAAA,MACD,QAAQ;AAAA,IACV,CAAC;AACD,WAAO,MAAM,SAAS,KAAK;AAAA,EAC7B,SAAS,OAAP;AAEA,eAAW,KAAK,qCAAqC,GAAG;AACxD,WAAO,MAAM,uBAAuB,KAAK,KAAK;AAAA,EAChD;AACF;",
  "names": ["startPush"]
}
